package org.drools.mas;

import org.drools.mas.body.content.*;
import org.drools.mas.action.message.*;
import org.drools.mas.action.message.types.*;
import org.drools.mas.action.message.invokers.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;

import org.drools.mas.action.helpers.*;


import javax.xml.ws.BindingProvider;


global java.util.Map channels;








// totally useless rule, except for debug :)
rule "Deliver Message Action Found"
    when
        $action: Action( actionName == "deliverMessage",
                          $refId   : this["refId"],
                          $convoId : this["conversationId"]
                        )
        $old : MessageDeliveredResponse( refId != $refId || convoId != $convoId )
    then
        System.out.println("!!!! Action RefId >>> " + $refId );
        System.out.println("!!!! Action ConvoId >>> " + $convoId );
end


//TODO : remove when delivery will generate the resp
rule "Deliver Message Action Reset Result"
    when
        $action: Action( actionName == "deliverMessage",
                          $refId   : this["refId"],
                          $convoId : this["conversationId"]
                        )
    then
        insert( new MessageDeliveredResponse( (String) $refId, (String) $convoId ) );
end





rule "Deliver Message Action Reset Result - Clean"
    when
        $action: Action( actionName == "deliverMessage",
                          $refId   : this["refId"],
                          $convoId : this["conversationId"]
                        )
        $old : MessageDeliveredResponse( refId != $refId || convoId != $convoId )
    then
        retract( $old );
end


rule "Clean Deliver Message Action"
salience -999
    when
        $action: Action( actionName == "deliverMessage" )
    then
        retract( $action );
end









rule "Insert Subject-About Entities"
    when
        $action: Action( actionName == "deliverMessage",
                         $refId        : this["refId"],
                         $cnvId        : this["conversationId"],
                         $subjectAbout : this["subjectAbout"]
                       )
        $id : String() from $subjectAbout
    then
        insertLogical( new Entity( $id ) );
end






query deliverMessage( String $refId, String $conversationId,
                      String $subjectabout,
                      String $sender, String $mainRecipients, String $secondaryRecipients, String $hiddenRecipients,
                      String $type, String $header, String $body,
                      String $priority,
                      String $deliveryDate, String $status,
                      MessageDeliveredResponse $return )
      $return:= MessageDeliveredResponse( $refId, $conversationId; )
end







